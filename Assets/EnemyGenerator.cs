// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
public class EnemyGenerator : MonoBehaviour 
{
	public GameObject enemyPrefab;

	private int enemyCount;
	private int enemyMax = 15;

	void Update(){

		// time function, Poisson distribution
		double mu = 7;
		double x = 2;

		double poisson = (Math.Pow (Math.E, -mu) * Math.Pow (mu, x)) / Factorial (x);
		//Debug.Log (poisson);

		//Debug.Log ("Camera " + Camera.main.gameObject.transform.localPosition);

		//Debug.Log ("Width " + screenw + " Height" + screenh);
		int rand = UnityEngine.Random.Range (0, 500);
		Debug.Log ("Rand value = " + rand);

		if (enemyCount < enemyMax && rand >= 485) {
			SpawnEnemy();
		}
	}

	double Factorial(double n){
		if(n <= 1){
			return 1;
		} else {
			return n * Factorial(n - 1); 
		}
	}

	void SpawnEnemy(){
		GameObject enemy = Instantiate (enemyPrefab);
		Vector3 camPos = Camera.main.gameObject.transform.localPosition;
		Vector3 enemyPos = camPos;

		float randQuad = UnityEngine.Random.Range (0, 4);
		if (randQuad <= 1) {
			// ++
			enemyPos = new Vector3(camPos.x + UnityEngine.Random.Range(10,15), camPos.y + UnityEngine.Random.Range(10,15), 0);
		} else if (randQuad <= 2) {
			// +-
			enemyPos = new Vector3(camPos.x + UnityEngine.Random.Range(10,15), camPos.y - UnityEngine.Random.Range(10,15), 0);
		} else if (randQuad <= 3) {
			// -+
			enemyPos = new Vector3(camPos.x - UnityEngine.Random.Range(10,15), camPos.y + UnityEngine.Random.Range(10,15), 0);
		} else {
			// --
			enemyPos = new Vector3(camPos.x - UnityEngine.Random.Range(10,15), camPos.y - UnityEngine.Random.Range(10,15), 0);
		}
		enemy.transform.position = enemyPos;
		enemyCount++;
	}
}


